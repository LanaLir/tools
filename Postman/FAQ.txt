1. Что такое HTTP и HTTPS

HTTP(HyperText Trancfer Protocol) - он появился как решение вопроса: как быстро и без потерь осуществить передачу данных. Но как показало время, он оказался далеко не идеален. Особенно, когда начали вводить формы оплаты на сайтах. И все данные передавались открытым текстом. Помимо перехвата хакеры могут добавлять фрагменты кода (сниппеты) к пакетам данных, реализуя DDos атаки. 

HTTPS (hypertext trancfer protocol secure)  - защищенный протокол. Здесь данные защищены криптошифрованием. То есть от пользователя к серверу идет рандомный набор символов, причем в каждой сессии свой шифр, поэтому дешифровщик невозможно подобрать. Для этого используют криптографические протоколы SSL и TSL, построенные на алгоритмах ассиметричного ключа (состоит из частного и публичного).


2. HTTP методы

Самые распространенные HTTP запросы, они же методы:
- GET - получение данных от сервера. Этот метод обеспечивает только получение информации и не позволяет влиять на нее.
- HEAD - работает как GET, но сервер возвращает только заголовок и статусную строку.
- POST - отправка данных на сервер. Используется, например, при заполнении форм.
- PUT - используется для загрузки содержимого запроса на указанный в запросе URI. 
- DELETE - удаляет ресурс, указанный в URI
- CONNECT - преобразует существующее соединение в тоннель
- OPTION - используют для получения параметров текущего соединения
- TRACE - соездает петлю, с помощью которой можно увидеть , что происходит с сообщением на всем пути передачи.


3. HTTP статус коды сервера
Все статус коды можно разделить на 5 групп:
- 1хх - информационные
- 2хх - успешные
- 3хх - перенаправление
- 4хх - ошибка клиента
- 5хх - ошибка сервета.

Наиболее распространенные коды:
2хх:
- 200 - OK. Все отлично
- 201 - created  - в результате запроса создан ресурс (например, запись в логе)
- 200 - accepted - запрос принят, но еще не завершен. 
- 204 - no content - запрос обработан, но не вернул данных. Например, ответ на put -запрос: он обработан, но нет необходимости об этом сообщать
3хх:
- 301 - Moved Permanently - в заголовке включается новый url, показывающий, куда обращаться в следующий раз
в 4хх:
- 400 - bad request - неправильный запрос. Ошибка в синтаксисе, например.
- 401 - Unauthorized  - отсутствует авторизация для получения запроса
- 403 -  Forbidden - доступ запрещен. Есть ограничения доступа к данным
- 404 - файл не найден - файл или страница были удалены или перемещены
- 409 - конфликт. Данные конфликтуют друг с другом

в 5хх:
- 500 - Internal Server Error- сигнализирует о наличии проблем со стороны сервера.
- 502 - Bad Gateway - сервер, к которому обращаешься делает запрос к другому серверу, а тот дает невалидный ответ
- 503 - Service Unavailable - сервер, к которому идет запрос, недоступен. 


4. Что такое ядро браузера

Ядро браузера, оно же движок, - это программа, которая преобразует содержимое веб-страниц (xml и  html файлы, изрбражения) информацию о форматировании (css стили т и п)  и преобразует в то, что мы видим на экране компьютера и телефона


5. Какие браузеры какие ядра используют

Trident - в IE
WebKit - в Safari
Blink - в Chrome
Gesko - в FireFox
Servo - в Gecko
KHTML - в браузере Konqueror

Плюс движки для JS:
Chakra JScript - для IE
Nitro  - для Safari
V8 - для Chrome
Spider Monkey - для FireFox


6. Что такое API

API (Application Programming Interface - программный интерфейс приложения) - набор способов и правил, по которым программы общаются между собой. Иными словами, это составляющая часть сервера, которая получает запросы и отправляет ответы.


7. Что такое эндпоинты?

Эндпоинт (endpoint) - это конечная точка, которая соединяет серверные процессы приложения с его интерфейсом. То есть сайт, mysite.ru  может иметь много эндпоинтов
mysite.ru/register
mysite.ru/login
Как правило, есть описание к какому эдпоинту с какими запросами можно обратиться.
Каждый эндпоинт характеризуется 3 вещами: АВС
- Address - где находится
- Blinding - как отправлять сообщения
- Contract - что содержит сообщение


8. URL (URI, URL, URN)
URL -универсальный локатор ресураса - http:/yandex.ru - указан способ запроса и имя ресурса, так же может быть включен порт, путь
URN - неизменное имя ресурса без привязки к его нахождению и способу обращения. urn:isbn:9780141036144
URI - включает и URL , и URI


9. Все HTTP запросы можно разделить на группы.
- Идемпотентные (запрос, который при многократном повторении дает тот же результат, что и при однократном ). Это GET, HEAD, PUT, DELETE, OPTIONS, TRACE
- Неидемпотентные (при повторных обращениях результаты будут менться) Это POST и PATCH. 


10. Безопасные HTTP запросы - это запросы, которые не меняеют данные. К ним относятся 
GET, HEAD, OPTIONS.


11. Идентификация. Аутентификация. Авторизация

Идентификация - процесс распознавания пользователя по его идентификатору. Например, ввод логина, телефона или почты и по ней система смотрит и сравнивает, да этот пользователь существует.

Аутентификация - процедура проверки подлинности, доказательство, что пользователь именно тот, за кого себя выдает (Нужно ввести правильный для этого логина пароль, разблокировать по отпечатку пальца, коду, что придет на почту или телефон, последние цифры номера с позвонившего номера,  произнести кодовое слов)

Авторизация - предоставление определенных прав. После аутентификации человек опознан и получает определенные права: читать почту, пользоваться гаджетом, войти в дом)


12. Что такое IP

IP - это уникальный адрес, идентифицирующий устройство  в интернете или локальной сети, построенной на базе стека протоколов TCP/IP. Иными словами, это адрес хоста, к которому мы хотим подключиться.
Адрес представляется в виде последовательности 4 чисел: 192.168.12.158 и определяется протоколом IPv4.
Ранее адрес выводится в виде серии 32 двоичных бит и записывался как 11100010101000100010101110011110, позже разделили на последовательность из 4х 8мибитных байта 11100010.10100010.00101011.10011110. Но и такую последовательность воспринимать тяжело. Поэтому перешли к привычному нам сейчас написанию. При таких адресах можно создать более 4 млрд уникальных адресов. 

IP адреса бывают частными и публичными. Частные используются в локальных сетях, публичные - глобальной сети интернет.

У каждого сайта есть свой IP, но для удобства восприятия и простоты запоминания были созданы домены. Домен - по сути это имя узла.


13. Что такое октаты?
Октатом называется каждый из 4х разрядов в IP адресах
DNS - это система доменных имен, которая обеспечивает связь между именем сайта и его ip  адресом.

14. Что такое порт и сколько портов у Linux сервера

Порт- это логический номер программы, позволяющий подключиться к определенному серверу.  И он используется как конечный элемент в системе идентификации процесса в Ос Linux. Порт может представлять собой число от 0 до 65535, то есть всего в Linux более 65000 портов.

Порты делятся на несколько диапазонов:
- системные (0-1023) - они зарезервированы для определенных служб
- пользовательские (1024-49151)
- частные (динамические) порты (49152-65535)

Вывести все порты можно командой cat 
- cat /etc/services | less

15. Уровни OSI
Модель сети OSI ныне не используется. Но знать надо)

7) Прикладной - на нем обеспечивается взаимодействие сети и пользователея (HTTP, FTP, POP3 и т.п)
6) Прикладной - здесь данные преобразуются, сжимаются, шифруются. 
5) Сеансовый - производится создание, поддержка или завершение сеанса соединения, определение прав на передачу данных
4) Транспортный - отвечает за доставку данных, выбирается порт, с которым будет соединение (TCP, UDP)
3) Сетевой - тут происходит определение пути и IP 
2) Канальный - передача данных узлам в том же сегменте сети.(МАС- адреса)
1. Физический - определение метода доставки (кабель, сигналы Wi Fi))

TCP/IP
4) Прикладной уровень - работа с данными, тут же живут протоколы HTTP, FTP, POP3 и т п)
3) Транспортный уровень - отвечает за транспортировку
2) Межсетевой уровень - тут определяется куда пойдут данные
1) Канальный уровень - подготовка пакетов данных

16. заголовки HTTP

Существуют 4 группы заголовков HTTP:
- General Header (общие)
- Request header (заголовки запросов)
- Response Header (Заголовки ответов)
- Entity Headers (Заголовки сущности)

Request Header содержит:
- Host - домен, по которому мы переходим
- Cookie -  куки, которые браузер отдает серверу
- User-agent - используемый браузер
- Accept Language и Accept Encoding  - принимаемые браузером язык и кодировка
- Autorizatiun - данные для авторации

Response Header:
- Cache-Control - сервер говорит браузеру, как кэшировать данные
- Content Type - тип и подтип содержимоего, приложение для его открытия
      - Content-Type: text/html; charset=UTF-8 — Тип текст, подтип HTML. Кодировка UTF-8
      - Content-Type: image/gif — Тип картинка, подтип GIF
      - Content-Type: application/pdf — Тип «открываемый внешним приложением», подтип PDF
- Content Disposition  -сообщает браузеру, скачивать или открывать документ как страницу
- Location - заголовок для редиректа
- Set-Cookie - вервер передает браузеру куки
- www Autenticate -  выводится окно с базовой аутентификацией
- Content -Encoding - сервер сообщает браузеру, сжата ли страница и в каком виду
- Server, X-Powered By - технологии, на которых работает сайт
